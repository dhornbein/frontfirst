// Make sure the charset is set appropriately
@charset "UTF-8";

// This includes all of the foundation global elements that are needed to work with any of the other files.
@import "framework/foundation/_foundation-global";

//
// Variables
//

$row-width:     emCalc(1200px);
$column-gutter: emCalc(30px) !default;
$total-columns: 12 !default;

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with brower-based text zoom or user-set defaults.
$base-font-size: 100%;

// Set your base font-size in pixels so emCalc can do its magic below
$em-base: 16px;

// We use these to control various global styles
$body-bg: #fff;
$body-font-color: #222;
$body-font-family: "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif;
$body-font-weight: normal;
$body-font-style: normal;

// We use these to control text direction settings
$text-direction: ltr;

// We use these as default colors throughout
$primary-color: #2ba6cb;
$secondary-color: #e9e9e9;
$alert-color: #c60f13;
$success-color: #5da423;

// We use these to make sure border radius matches unless we want it different.
$global-radius: 3px;
$global-rounded: 1000px;

// We use these to control inset shadow shiny edges and depressions.
$shiny-edge-size: 0 1px 0;
$shiny-edge-color: rgba(#fff, .5);
$shiny-edge-active-color: rgba(#000, .2);

// We use this to control whether or not CSS classes come through in the gem files.
$include-html-classes: true;
$include-print-styles: true;

// Modular html classes
$include-html-grid-classes: $include-html-classes;
$include-html-visibility-classes: $include-html-classes;
$include-html-button-classes: $include-html-classes;
$include-html-form-classes: $include-html-classes;
$include-html-media-classes: $include-html-classes;
$include-html-section-classes: $include-html-classes;
$include-html-reveal-classes: $include-html-classes;
$include-html-alert-classes: $include-html-classes;
$include-html-nav-classes: $include-html-classes;
$include-html-label-classes: $include-html-classes;
$include-html-panel-classes: $include-html-classes;
$include-html-pricing-classes: $include-html-classes;
$include-html-progress-classes: $include-html-classes;


//
// Functions
//

// Working in ems is annoying. Think in pixels by using this handy function, emCalc(#px)
@function emCalc($pxWidth) {
  @return $pxWidth / $em-base * 1em;
}

// Creating rems and pixels
@function remCalc($pxWidth) {
  @return $pxWidth / $em-base * 1rem;
}

// Grid Calculation for Percentages
@function gridCalc($colNumber, $totalColumns) {
  @return percentage(($colNumber / $totalColumns));
}


//
// Mixins
//

// We use this to control border radius.
@mixin radius($radius:$global-radius) {
  @if $radius {
    -webkit-border-radius: $radius;
    border-radius: $radius;
  }
}

// We use this to create equal side border radius on elements.
@mixin side-radius($side, $radius) {
  @if $side == left {
    -webkit-border-radius: $radius 0 0 $radius;
    border-radius: $radius 0 0 $radius;
  }
  @else if $side == right {
    -webkit-border-radius: 0 $radius $radius 0;
    border-radius: 0 $radius $radius 0;
  }
  @else if $side == top {
    -webkit-border-radius: $radius $radius 0 0;
    border-radius: $radius $radius 0 0;
  }
  @else if $side == bottom {
    -webkit-border-radius: 0 0 $radius $radius;
    border-radius: 0 0 $radius $radius;
  }
}

// We can control whether or not we have inset shadows edges.
@mixin inset-shadow($active:true) {
  -webkit-box-shadow: $shiny-edge-size $shiny-edge-color inset;
  box-shadow: $shiny-edge-size $shiny-edge-color inset;

  @if $active { &:active {
    -webkit-box-shadow: $shiny-edge-size $shiny-edge-active-color inset;
    box-shadow: $shiny-edge-size $shiny-edge-active-color inset; } }
}

// We use this to add transitions to elements
@mixin single-transition($property:all, $speed:300ms, $ease:ease-out) {
  -webkit-transition: $property $speed $ease;
  -moz-transition: $property $speed $ease;
  transition: $property $speed $ease;
}

// We use this to add box-sizing across browser prefixes
@mixin box-sizing($type:border-box) {
  -moz-box-sizing: $type;
  -webkit-box-sizing: $type;
  box-sizing: $type;
}

// We use this to create equalateral triangles
@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {
  content: "";
  display: block;
  width: 0;
  height: 0;
  border: solid $triangle-size;
  @if ($triangle-direction == top) {
    border-color: $triangle-color transparent transparent transparent;
  }
  @if ($triangle-direction == bottom) {
    border-color: transparent transparent $triangle-color transparent;
  }
  @if ($triangle-direction == left) {
    border-color: transparent transparent transparent $triangle-color;
  }
  @if ($triangle-direction == right) {
    border-color: transparent $triangle-color transparent transparent;
  }
}

// We use this to do clear floats
@mixin clearfix() {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}

// Media Queries
$small-screen: emCalc(768px) !default;
$medium-screen: emCalc(1280px) !default;
$large-screen: emCalc(1440px) !default;

$screen: "only screen" !default;
$small: "only screen and (min-width:"#{$small-screen}")" !default;
$medium: "only screen and (min-width:"#{$medium-screen}")" !default;
$large: "only screen and (min-width:"#{$large-screen}")" !default;
$landscape: "only screen and (orientation: landscape)" !default;
$portrait: "only screen and (orientation: portrait)" !default;


// Foundation Components
@import "framework/normalize";
@import
  "framework/foundation/components/global",
  "framework/foundation/components/grid",
  "framework/foundation/components/visibility",
  "framework/foundation/components/block-grid",
  "framework/foundation/components/type",
  "framework/foundation/components/buttons",
  "framework/foundation/components/forms",
  "framework/foundation/components/custom-forms",
  "framework/foundation/components/button-groups",
  "framework/foundation/components/dropdown-buttons",
  "framework/foundation/components/split-buttons",
  "framework/foundation/components/flex-video",
  "framework/foundation/components/section",
  "framework/foundation/components/top-bar",
  "framework/foundation/components/orbit",
  "framework/foundation/components/reveal",
  "framework/foundation/components/joyride",
  "framework/foundation/components/clearing",
  "framework/foundation/components/alert-boxes",
  "framework/foundation/components/breadcrumbs",
  "framework/foundation/components/keystrokes",
  "framework/foundation/components/labels",
  "framework/foundation/components/inline-lists",
  "framework/foundation/components/pagination",
  "framework/foundation/components/panels",
  "framework/foundation/components/pricing-tables",
  "framework/foundation/components/progress-bars",
  "framework/foundation/components/side-nav",
  "framework/foundation/components/sub-nav",
  "framework/foundation/components/switch",
  "framework/foundation/components/magellan",
  "framework/foundation/components/tables",
  "framework/foundation/components/thumbs",
  "framework/foundation/components/tooltips",
  "framework/foundation/components/dropdown";

// additonal resources
//@import "font-awesome";

// Main content

@import "base",
"layout",
"modules/module",
"state",
"theme",
"print",
"prototype";